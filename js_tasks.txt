Create a function that returns the sum of the two lowest positive numbers given an array 
of minimum 4 integers. No floats or empty arrays will be passed.

For example, when an array is passed like [19, 5, 42, 2, 77], the output should be 7.

/******************************/

function sumTwoSmallestNumbers(numbers) {  
 var arr = numbers.sort(function(a,b){
			 return a-b;
			});
 var rez=0;
 
 for(var i=0; i<arr.length; i++){
   if(i==0){
    rez += arr[i];
   }
   if(i==1){
    rez += arr[i];
   }
   
}
return rez;

};


/******************************************************/
//треугольник из символов

var i = 0, j = 0;
// Желаемое количество строк
var max = 5;
var space = "",
    star = "";

while (i < max) {
    space = "";
    star = "";
    for (j = 0; j < max - i; j++) space += " ";
    for (j = 0; j < 2 * i + 1; j++) star += "*";
    console.log(space + star);
    i++;
}

var i = 5, j = 0;
// Желаемое количество строк
var min = 0;
var space = "",
    star = "";

while (i > min) {
    space = "";
    star = "";
    for (j = 5; j > i; j--) space += " ";
    for (j = 0; j < 2 * i - 1; j++) star += "*";
    console.log(space + star);
    i--;
}

/******************************************************/
The goal of this exercise is to convert a string to a new string where each character in the new string is '(' if that character appears only once in the original string, or ')' if that character appears more than once in the original string. Ignore capitalization when determining if a character is a duplicate.

Examples:

"din" => "((("

"recede" => "()()()"

"Success" => ")())())"

 var string = "";
  var lowerCaseWord = word.toLowerCase();
  for (var i = 0; i < lowerCaseWord.length; i++) {
    if (lowerCaseWord.indexOf(lowerCaseWord[i]) === lowerCaseWord.lastIndexOf(lowerCaseWord[i])) {
      string += "(";
    } else {
      string += ")";
    }
  }
  return string;
